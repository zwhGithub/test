(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{820:function(t,s,a){"use strict";a.r(s);var e=a(114),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql两阶段加锁协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql两阶段加锁协议"}},[t._v("#")]),t._v(" MySQL两阶段加锁协议")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("此篇博客主要是讲述MySql(仅限innodb)的两阶段加锁(2PL)协议,而非两阶段提交(2PC)协议,区别如下:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2PL,两阶段加锁协议:主要用于单机事务中的一致性与隔离性。\n2PC,两阶段提交协议:主要用于分布式事务。\n")])])]),a("p",[t._v("MySql本身针对性能，还有一个MVCC(多版本控制)控制,本文不考虑此种技术，仅仅考虑MySql本身的加锁协议。")]),t._v(" "),a("h2",{attrs:{id:"什么时候会加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候会加锁"}},[t._v("#")]),t._v(" 什么时候会加锁")]),t._v(" "),a("p",[t._v("在对记录"),a("strong",[t._v("更新操作或者(select for update、lock in share model)时")]),t._v("，会对记录加锁(有共享锁、排它锁、意向锁、gap锁、nextkey锁等等),本文为了简单考虑，不考虑锁的种类。")]),t._v(" "),a("h2",{attrs:{id:"什么是两阶段加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是两阶段加锁"}},[t._v("#")]),t._v(" 什么是两阶段加锁")]),t._v(" "),a("p",[t._v("在一个事务里面，分为加锁(lock)阶段和解锁(unlock)阶段,也即所有的lock操作都在unlock操作之前,如下图所示:\n"),a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105307_MZJc.png",alt:"输入图片说明"}})]),t._v(" "),a("h2",{attrs:{id:"为什么需要两阶段加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要两阶段加锁"}},[t._v("#")]),t._v(" 为什么需要两阶段加锁")]),t._v(" "),a("p",[t._v("引入2PL是为了保证事务的隔离性，即多个事务在并发的情况下等同于串行的执行。 在数学上证明了如下的封锁定理:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("如果事务是良构的且是两阶段的，那么任何一个合法的调度都是隔离的。\n")])])]),a("p",[t._v("具体的数学推到过程可以参照<<事务处理:概念与技术>>这本书的7.5.8.2节.\n此书乃是关于数据库事务的圣经，无需解释(中文翻译虽然晦涩，也能坚持读下去,强烈推荐)")]),t._v(" "),a("h2",{attrs:{id:"工程实践中的两阶段加锁-s2pl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程实践中的两阶段加锁-s2pl"}},[t._v("#")]),t._v(" 工程实践中的两阶段加锁-S2PL")]),t._v(" "),a("p",[t._v("在实际情况下，SQL是千变万化、条数不定的,数据库很难在事务中判定什么是加锁阶段，什么是解锁阶段。于是引入了S2PL(Strict-2PL),即:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("在事务中只有提交(commit)或者回滚(rollback)时才是解锁阶段，\n其余时间为加锁阶段。\n")])])]),a("p",[t._v("如下图所示:\n"),a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105326_2MZl.png",alt:"输入图片说明"}}),t._v("\n这样的话，在实际的数据库中就很容易实现了。")]),t._v(" "),a("h2",{attrs:{id:"两阶段加锁对性能的影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两阶段加锁对性能的影响"}},[t._v("#")]),t._v(" 两阶段加锁对性能的影响")]),t._v(" "),a("p",[t._v("上面很好的解释了两阶段加锁，现在我们分析下其对性能的影响。考虑下面两种不同的扣减库存的方案:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 方案1:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 扣减库存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t_inventory "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("${id} "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁住用户账户表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_user_account "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" user_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入订单记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_trans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 方案2:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁住用户账户表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_user_account "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" user_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入订单记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_trans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 扣减库存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t_inventory "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("${id} "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("由于在同一个事务之内，这几条对数据库的操作应该是等价的。但在两阶段加锁下的性能确是有比较大的差距。两者方案的时序如下图所示:\n"),a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105344_zOGz.png",alt:"输入图片说明"}})]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("由于库存往往是最重要的热点，是整个系统的瓶颈。那么如果采用第二种方案的话,\ntps应该理论上能够提升3rt/rt=3倍。这还仅仅是业务就只有三条SQL的情况下，\n多一条sql就多一次rt,就多一倍的时间。\n")])])]),a("p",[t._v("值得注意的是：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("在更新到数据库的那个时间点才算锁成功\n提交到数据库的时候才算解锁成功\n这两个round_trip的前半段是不会计算在内的\n")])])]),a("p",[t._v("如下图所示:\n"),a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105533_ACvC.png",alt:"输入图片说明"}}),t._v("\n当前只考虑网络时延，不考虑数据库和应用本身的时间消耗。")]),t._v(" "),a("h2",{attrs:{id:"依据s2pl的性能优化-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依据s2pl的性能优化-重要"}},[t._v("#")]),t._v(" 依据S2PL的性能优化 （重要）")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("从上面的例子中,可以看出，需要把最热点的记录，\n放到事务最后，这样可以显著的提高吞吐量。更进一步:\n越热点记录离事务的终点越近(无论是commit还是rollback)\n笔者认为，先后顺序如下图:\n")])])]),a("p",[a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105402_aaLC.png",alt:"输入图片说明"}})]),t._v(" "),a("h3",{attrs:{id:"避免死锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免死锁"}},[t._v("#")]),t._v(" 避免死锁")]),t._v(" "),a("p",[t._v("这也是任何SQL加锁不可避免的。上文提到了按照记录Key的热度在事务中倒序排列。\n那么"),a("strong",[t._v("写代码的时候任何可能并发的SQL都必须按照这种顺序来处理，不然会造成死锁")]),t._v("。如下图所示:\n"),a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105547_k2qF.png",alt:"输入图片说明"}})]),t._v(" "),a("h3",{attrs:{id:"select-for-update和update-where-谓词计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-for-update和update-where-谓词计算"}},[t._v("#")]),t._v(" select for update和update where 谓词计算")]),t._v(" "),a("p",[t._v("我们可以直接将一些简单的判断逻辑写到update的谓词里面，以减少加锁时间，考虑下面两种方案:\n方案1:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v(":\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_inventory "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t_inventory "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),t._v("\n")])])]),a("p",[t._v("方案2:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v(":\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t_inventory "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ele\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("时延如下图所示:\n"),a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201707/17105419_aMgn.png",alt:"输入图片说明"}}),t._v("\n可以看到，通过在update中加谓词计算，少了1rt的时间。")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("由于update在执行过程中对符合谓词条件的记录加的是和select for update一致的排它锁\n(具体的锁类型较为复杂，不在这里描述),所以两者效果一样。\n")])])]),a("p",[t._v("直接在where里面进行判断，利用update where的排它锁，能让锁的时间更短。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("MySql采用两阶段加锁协议实现隔离性和一致性，我们只有深入的去理解这种协议，才能更好的对我们的SQL进行优化，增加系统的吞吐量。")])])}),[],!1,null,null,null);s.default=r.exports}}]);